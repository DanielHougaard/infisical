name: Release image + Helm chart K8s Operator
on:
    push:
        tags:
            - "infisical-k8-operator/v*.*.*"

jobs:
    generate-and-pr:
        name: Generate Helm Chart PR
        runs-on: ubuntu-latest
        outputs:
            pr_number: ${{ steps.create-pr.outputs.pull-request-number }}
        steps:
            - name: Extract version from tag
              id: extract_version
              run: echo "::set-output name=version::${GITHUB_REF_NAME#infisical-k8-operator/}"

            - name: Checkout code
              uses: actions/checkout@v2
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  fetch-depth: 0

            - name: Install Helm
              uses: azure/setup-helm@v3
              with:
                  version: v3.10.0

            - name: Install python
              uses: actions/setup-python@v4

            - name: Install Go
              uses: actions/setup-go@v4
              with:
                  go-version: 1.21

            - name: Install dependencies
              working-directory: k8-operator
              run: |
                  make helmify
                  make kustomize
                  make controller-gen

            - name: Generate Helm Chart
              working-directory: k8-operator
              run: make helm

            - name: Update Helm Chart Version
              run: ./k8-operator/scripts/update-version.sh ${{ steps.extract_version.outputs.version }}

            - name: Debug - Check file changes
              run: |
                  echo "Current git status:"
                  git status
                  echo ""
                  echo "Modified files:"
                  git diff --name-only

                  # If there is no diff, exit with error
                  if [ -z "$(git diff --name-only)" ]; then
                    echo "No helm changes or version changes. Invalid release detected, Exiting."
                    exit 1
                  fi

            - name: Create Pull Request
              id: create-pr
              uses: peter-evans/create-pull-request@v5
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  commit-message: "Update Helm chart to version ${{ steps.extract_version.outputs.version }}"
                  committer: GitHub <noreply@github.com>
                  author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
                  branch: helm-update-${{ steps.extract_version.outputs.version }}
                  delete-branch: true
                  title: "Update Helm chart to version ${{ steps.extract_version.outputs.version }}"
                  body: |
                      This PR updates the Helm chart to version `${{ steps.extract_version.outputs.version }}`.
                      Additionally the helm chart has been updated to match the latest operator code changes.

                      Associated Release Workflow: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

                      Please review and approve to continue the release process. To cancel the release process, you can close this PR.
                      You have **30 minutes** to approve or close the PR after it is created, or the release workflow will cancel itself.
                  base: main

    wait-for-approval:
        name: Wait for Helm Chart PR Merge
        needs: generate-and-pr
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Check if PR was created
              id: check_pr
              run: |
                  PR_NUMBER="${{ needs.generate-and-pr.outputs.pr_number }}"
                  if [ "$PR_NUMBER" = "skip" ]; then
                    echo "::set-output name=skip_wait::true"
                    echo "No PR was created, skipping wait step"
                  else
                    echo "::set-output name=skip_wait::false"
                    echo "PR #$PR_NUMBER was created, will wait for approval"
                  fi

            - name: Wait for Helm Chart PR Merge
              timeout-minutes: 30 # Job dies after 30 minutes of waiting
              if: steps.check_pr.outputs.skip_wait != 'true'
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  PR_NUMBER: ${{ needs.generate-and-pr.outputs.pr_number }}
                  REPO: ${{ github.repository }}
              run: |
                  echo "Waiting for PR #${PR_NUMBER} to be merged..."

                  if [ -z "$PR_NUMBER" ]; then
                    echo "Error: PR number is empty. Cannot proceed."
                    exit 1
                  fi

                  # Maximum wait time (24 hours in seconds)
                  timeout=$((24 * 60 * 60))
                  start_time=$(date +%s)

                  while true; do
                    echo "Checking PR status..."
                    PR_DATA=$(gh pr view "${PR_NUMBER}" --json state,mergedAt)
                    PR_STATE=$(echo $PR_DATA | jq -r .state)
                    MERGED_AT=$(echo $PR_DATA | jq -r .mergedAt)

                    # Check if mergedAt is null or empty
                    if [ "${MERGED_AT}" = "null" ] || [ -z "${MERGED_AT}" ]; then
                      MERGED="false"
                    else
                      MERGED="true"
                    fi
                    
                    # If PR is merged, break the loop and continue to release step
                    if [ "$MERGED" = "true" ]; then
                      echo "PR has been merged! Continuing with the workflow."
                      break
                    fi
                    
                    # If PR is closed but not merged, fail the workflow
                    if [ "$PR_STATE" = "CLOSED" ] && [ "$MERGED" != "true" ]; then
                      echo "PR was closed without being merged."
                      exit 1
                    fi
                    
                    # Check again every 30 seconds
                    echo "Waiting 30 seconds before checking again..."
                    sleep 30
                  done

    build-and-publish:
        name: Build and Publish Image + Helm Chart
        needs: wait-for-approval
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code (post-merge)
              uses: actions/checkout@v2
              with:
                  ref: main
                  fetch-depth: 0

            - name: Extract version from tag
              id: extract_version
              run: echo "::set-output name=version::${GITHUB_REF_NAME#infisical-k8-operator/}"

            - name: Print Chart.yaml
              run: cat helm-charts/secrets-operator/Chart.yaml

            - name: Print values.yaml
              run: cat helm-charts/secrets-operator/values.yaml
