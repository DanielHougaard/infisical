name: Release image + Helm chart K8s Operator
on:
    push:
        tags:
            - "infisical-k8-operator/v*.*.*"

jobs:
    generate-and-pr:
        runs-on: ubuntu-latest
        outputs:
            pr_number: ${{ steps.create-pr.outputs.pull-request-number }}
        steps:
            - name: Extract version from tag
              id: extract_version
              run: echo "::set-output name=version::${GITHUB_REF_NAME#infisical-k8-operator/}"

            - name: Checkout code
              uses: actions/checkout@v2
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  fetch-depth: 0

            - name: Install Helm
              uses: azure/setup-helm@v3
              with:
                  version: v3.10.0

            - name: Install python
              uses: actions/setup-python@v4

            - name: Install Go
              uses: actions/setup-go@v4
              with:
                  go-version: 1.21

            - name: Install dependencies
              working-directory: k8-operator
              run: |
                  make helmify
                  make kustomize
                  make controller-gen

            - name: Generate Helm Chart
              working-directory: k8-operator
              run: make helm

            - name: Update Helm Chart Version
              run: ./k8-operator/scripts/update-version.sh ${{ steps.extract_version.outputs.version }}

            - name: Debug - Check file changes
              run: |
                  echo "Current git status:"
                  git status
                  echo ""
                  echo "Modified files:"
                  git diff --name-only
                  echo ""
                  echo "Detailed changes:"
                  git diff

            - name: Check for changes
              id: check_changes
              run: |
                  if [[ -n $(git status --porcelain) ]]; then
                    echo "::set-output name=has_changes::true"
                    echo "Changes detected in the repository"
                  else
                    echo "::set-output name=has_changes::false"
                    echo "No changes detected in the repository"
                  fi

            - name: Configure Git
              if: steps.check_changes.outputs.has_changes == 'true'
              run: |
                  git config --local user.email "github-actions[bot]@users.noreply.github.com"
                  git config --local user.name "github-actions[bot]"

            - name: Create Branch
              if: steps.check_changes.outputs.has_changes == 'true'
              run: |
                  BRANCH_NAME="helm-update-${{ steps.extract_version.outputs.version }}"
                  git checkout -b $BRANCH_NAME
                  git add .
                  git commit -m "Update Helm chart to version ${{ steps.extract_version.outputs.version }}"
                  git push -u origin $BRANCH_NAME
                  echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

            - name: Create Pull Request
              if: steps.check_changes.outputs.has_changes == 'true'
              id: create-pr
              uses: peter-evans/create-pull-request@v5
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  title: "Update Helm chart to version ${{ steps.extract_version.outputs.version }}"
                  body: |
                      This PR updates the Helm chart to version ${{ steps.extract_version.outputs.version }}.

                      Please review and approve to continue the release process.
                  branch: ${{ env.BRANCH_NAME }}
                  base: main
                  draft: false

            - name: PR Details
              if: steps.check_changes.outputs.has_changes == 'true'
              run: |
                  echo "Created PR #${{ steps.create-pr.outputs.pull-request-number }}"
                  echo "PR URL: ${{ steps.create-pr.outputs.pull-request-url }}"
                  echo "::set-output name=pr_number::${{ steps.create-pr.outputs.pull-request-number }}"

            - name: No changes detected
              if: steps.check_changes.outputs.has_changes != 'true'
              run: |
                  echo "No changes detected in the repository. Skipping PR creation."
                  echo "::set-output name=pr_number::skip"

    wait-for-approval:
        needs: generate-and-pr
        runs-on: ubuntu-latest
        steps:
            - name: Check if PR was created
              id: check_pr
              run: |
                  PR_NUMBER="${{ needs.generate-and-pr.outputs.pr_number }}"
                  if [ "$PR_NUMBER" = "skip" ]; then
                    echo "::set-output name=skip_wait::true"
                    echo "No PR was created, skipping wait step"
                  else
                    echo "::set-output name=skip_wait::false"
                    echo "PR #$PR_NUMBER was created, will wait for approval"
                  fi

            - name: Wait for PR merge
              if: steps.check_pr.outputs.skip_wait != 'true'
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  PR_NUMBER: ${{ needs.generate-and-pr.outputs.pr_number }}
                  REPO: ${{ github.repository }}
              run: |
                  echo "Waiting for PR #${PR_NUMBER} to be merged..."

                  if [ -z "$PR_NUMBER" ]; then
                    echo "Error: PR number is empty. Cannot proceed."
                    exit 1
                  fi

                  # Maximum wait time (24 hours in seconds)
                  timeout=$((24 * 60 * 60))
                  start_time=$(date +%s)

                  while true; do
                    # Check if we've exceeded the timeout
                    current_time=$(date +%s)
                    elapsed=$((current_time - start_time))
                    if [ $elapsed -gt $timeout ]; then
                      echo "Timeout waiting for PR to be merged."
                      exit 1
                    fi
                    
                    # Query PR status using direct gh pr view command
                    echo "Checking PR status..."
                    PR_DATA=$(gh pr view ${PR_NUMBER} --json state,merged)
                    PR_STATE=$(echo $PR_DATA | jq -r .state)
                    MERGED=$(echo $PR_DATA | jq -r .merged)
                    
                    echo "Current PR state: $PR_STATE, Merged: $MERGED"
                    
                    # If PR is merged, break the loop
                    if [ "$MERGED" = "true" ]; then
                      echo "PR has been merged! Continuing with the workflow."
                      break
                    fi
                    
                    # If PR is closed but not merged, fail the workflow
                    if [ "$PR_STATE" = "CLOSED" ] && [ "$MERGED" != "true" ]; then
                      echo "PR was closed without being merged."
                      exit 1
                    fi
                    
                    # Wait before checking again (60 seconds)
                    echo "Waiting 60 seconds before checking again..."
                    sleep 60
                  done

    build-and-publish:
        needs: wait-for-approval
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code (post-merge)
              uses: actions/checkout@v2
              with:
                  ref: main
                  fetch-depth: 0

            - name: Extract version from tag
              id: extract_version
              run: echo "::set-output name=version::${GITHUB_REF_NAME#infisical-k8-operator/}"

            - name: Print Chart.yaml
              run: cat helm-charts/secrets-operator/Chart.yaml

            - name: Print values.yaml
              run: cat helm-charts/secrets-operator/values.yaml

            - name: Print infisicalsecret-crd.yaml
              run: cat helm-charts/secrets-operator/templates/infisicalsecret-crd.yaml
